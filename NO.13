#include <bits/stdc++.h>

using namespace std;

class Solution {
public:
    int romanToInt(string s) {
        map<char,int> roman_map;
        roman_map.insert(pair<char,int>('I', 1));
        roman_map.insert(pair<char,int>('V', 5));
        roman_map.insert(pair<char,int>('X', 10));
        roman_map.insert(pair<char,int>('L', 50));
        roman_map.insert(pair<char,int>('C', 100));
        roman_map.insert(pair<char,int>('D', 500));
        roman_map.insert(pair<char,int>('M', 1000));

        int res=0;
        char tmp1,tmp2;
        for(int i=0;i<s.size();i++){
            tmp1 = s.at(i);
            if(i+1 == s.size()){
                res += roman_map[tmp1];
            }
            else{
                tmp2 = s.at(i+1);
                if(roman_map[tmp1] < roman_map[tmp2]){
                    res += roman_map[tmp2] - roman_map[tmp1];
                    i++;
                }
                else{
                    res += roman_map[tmp1];
                }
            }    
        }
        return res;
    }
};


int main(){
    Solution sol;
    cout << sol.romanToInt("III") << endl;
    system("pause");
    return 0;
}
